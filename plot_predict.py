import json
import matplotlib.pyplot as plt
import numpy as np

# 读取数据（这里直接用你的示例数据）
data_str = '''{"pred": [[[-18.82036781311035, 36.56809997558594, -28.73529052734375], [-19.5823974609375, 34.107521057128906, -31.776308059692383], [-20.4698429107666, 31.669963836669922, -33.8245735168457], [-21.523395538330078, 28.859224319458008, -36.09126663208008], [-23.49808120727539, 24.266523361206055, -38.949554443359375], [-26.843416213989258, 17.709753036499023, -43.907569885253906]], [[-5.680121898651123, 6.153103351593018, -4.527997016906738], [-6.044389724731445, 5.380891799926758, -5.457352161407471], [-6.45853328704834, 4.566733360290527, -6.168362617492676], [-6.976456642150879, 3.627305030822754, -6.972456932067871], [-7.717997074127197, 2.2754015922546387, -7.951180458068848], [-8.688955307006836, 0.6586532592773438, -8.817008972167969]]], "GT": [[[-18.37069320678711, 35.2003059387207, -31.26369285583496], [-18.96369171142578, 31.95130729675293, -33.702693939208984], [-19.654691696166992, 27.961307525634766, -36.60569381713867], [-22.10769271850586, 20.428308486938477, -40.6946907043457], [-27.25069236755371, 9.116307258605957, -48.94069290161133], [-28.543691635131836, 5.875307559967041, -50.11069107055664]], [[-5.458846092224121, 6.165153980255127, -4.897846221923828], [-5.647846221923828, 5.489153861999512, -5.385846138000488], [-5.667846202850342, 4.646153926849365, -5.9938459396362305], [-6.138845920562744, 3.0191538333892822, -6.9328460693359375], [-7.190845966339111, 0.688153862953186, -8.00584602355957], [-7.581846237182617, -0.03184615448117256, -7.894845962524414]]], "hist": [[[-12.552692413330078, 61.798309326171875, 1.6843076944351196], [-13.418692588806152, 57.17930603027344, -6.03569221496582], [-15.190691947937012, 53.15730667114258, -9.738692283630371], [-15.9346923828125, 49.84330749511719, -15.438692092895508], [-17.45869255065918, 40.76430892944336, -24.707693099975586], [-18.00669288635254, 38.5023078918457, -26.85369300842285]], [[-4.442846298217773, 11.628153800964355, 1.8971538543701172], [-4.468846321105957, 10.649153709411621, 0.3891538381576538], [-4.857846260070801, 9.908153533935547, -0.18684615194797516], [-5.077846050262451, 9.28015422821045, -1.4578461647033691], [-5.248846054077148, 7.383153915405273, -3.462846040725708], [-5.378846168518066, 6.837153911590576, -3.889846086502075]]]}'''

data = json.loads(data_str)

# 解析数据
pred = np.array(data["pred"])  # 预测值
GT = np.array(data["GT"])      # 真实值
hist = np.array(data["hist"])  # 历史轨迹

num_vehicles = pred.shape[2]
print(f"Number of vehicles: {num_vehicles}")

# 创建画布
plt.figure(figsize=(10, 6))

# 遍历每辆车，分别绘制 hist（历史轨迹）、GT（真实轨迹）、pred（预测轨迹）
for i in range(num_vehicles):
    # 取 x, y 坐标
    hist_x, hist_y = hist[0, :, i], hist[1, :, i]
    GT_x, GT_y = GT[0, :, i], GT[1, :, i]
    pred_x, pred_y = pred[0, :, i], pred[1, :, i]

    # 绘制历史轨迹
    plt.plot(hist_x, hist_y, 'bo-', label="History" if i == 0 else "", alpha=0.6)

    # 连接历史轨迹最后一点到预测轨迹、GT的第一点
    connect_x = [hist_x[-1], pred_x[0]]
    connect_y = [hist_y[-1], pred_y[0]]
    plt.plot(connect_x, connect_y, 'r--', alpha=0.6)  # 连接历史和预测

    connect_x_GT = [hist_x[-1], GT_x[0]]
    connect_y_GT = [hist_y[-1], GT_y[0]]
    plt.plot(connect_x_GT, connect_y_GT, 'g--', alpha=0.6)  # 连接历史和GT

    # 绘制真实轨迹
    plt.plot(GT_x, GT_y, 'g*-', label="Ground Truth" if i == 0 else "", alpha=0.6)

    # 绘制预测轨迹
    plt.plot(pred_x, pred_y, 'r--o', label="Prediction" if i == 0 else "", alpha=0.6)

    # 标记起点
    plt.scatter(hist_x[0], hist_y[0], color='blue', marker='s', label="Start (Hist)" if i == 0 else "")
    plt.scatter(GT_x[0], GT_y[0], color='green', marker='D', label="Start (GT)" if i == 0 else "")
    plt.scatter(pred_x[0], pred_y[0], color='red', marker='x', label="Start (Pred)" if i == 0 else "")

# 设置图例和标题
plt.xlabel("X Position")
plt.ylabel("Y Position")
plt.title("Vehicle Trajectory Prediction vs Ground Truth")
plt.legend()
plt.grid(True)
plt.show()
